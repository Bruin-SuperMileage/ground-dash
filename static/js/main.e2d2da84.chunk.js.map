{"version":3,"sources":["firebase.js","components/groundDash/controls.js","components/toggleButton.js","components/groundDash/header.js","components/groundDash/driver.js","components/groundDash/accelerometer.js","components/groundDash/environment.js","components/groundDash/hall-effect.js","components/groundDash/magnetometer.js","components/groundDash/imu.js","components/groundDash/joulemeter.js","components/groundDash/car.js","components/groundDash/lap.js","components/groundDash/gps.js","components/groundDash/track.js","components/groundDash.js","components/driverDash/lapDriver.js","components/driverDash/speedDriver.js","components/driverDash/speedometerDriver.js","components/driverDash.js","components/whichOne.js","App.js","serviceWorker.js","index.js"],"names":["config","apiKey","apiKeyHidden","authDomain","databaseURL","projectId","storageBucket","firebase","initializeApp","lapNumber","ToggleButton","className","src","process","alt","onClick","this","props","React","Component","Header","state","date","time","daysLeft","intervalID","setInterval","tick","today","Date","date1","toDateString","cmas","daysLeft1","Math","ceil","getTime","setState","toLocaleTimeString","clearInterval","role","aria-label","href","Driver","Accelerometer","accelerometer","Environment","environment","altitude","temperature","HallEffect","halleffect","speed","rpm","throttle","Magnetometer","magnetometer","MagX","MagY","MagZ","Imu","imu","heading","GyX","GyY","GyZ","pitch","roll","Joulemeter","joulemeter","voltage","current","power","Car","Lap","timerOn","timerStart","timerStart2","timerTime","timerTimeReset","isRunning","startTimer","now","timer","stopTimer","resetTimer","resetTimer2","componentDidMount","lap","componentDidUpdate","bind","latestTrial","exists","peakTimes","database","ref","on","snapshot","val","child","slowestTime","fastestTime","slowestLap","fastestLap","centiseconds","floor","slice","seconds","minutes","fourptthree","fourptthreecentiseconds","fourptthreeseconds","fourptthreeminutes","Weather","gps","latitude","longitude","startTimeMilli","convertedStart","stopTimeMilli","convertedStop","lapTimeMilli","lapTime","convertedLapTimes","convertTime","milliseconds","minute","milli","pad","Number","prototype","size","s","String","length","Controls","start","stop","running","update1","pushTime","currentTime","push","update2","indexOf","min","max","convertedLapTime","update","forceUpdate","updates","startTime","getHours","getMinutes","getSeconds","driving","map","item","Track","track","GroundDash","style","paddingTop","LapDriver","render","SpeedDriver","SpeedometerDriver","minValue","maxValue","needleHeightRatio","maxSegmentLabels","segments","value","speedometer","textColor","width","height","needleTransition","ringWidth","paddingVertical","valueTextFontSize","labelFontSize","paddingHorizontal","WhichOne","whichOne","which","all","App","latestTime","latestData","battery","lapTimes","motor","latestTimeUpdate","dateUpdate","abs","latestTime1","latestTrial1","latestData1","button","whichOneIsIt","setDriver","setGround","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e2d2da84.chunk.js","sourcesContent":["import {apiKeyHidden} from './config';\r\nimport firebase from 'firebase';\r\n\r\n// Set the configuration for your app\r\n// TODO: Replace with your project's config object\r\n\r\nvar config = {\r\n  // apiKey: apiKeyHidden,\r\n  // authDomain: \"bruin-racing.firebaseapp.com\",\r\n  // databaseURL: \"https://bruin-racing.firebaseio.com\",\r\n  // projectId: \"bruin-racing\",\r\n  // storageBucket: \"bucket.appspot.com\",\r\n  apiKey: apiKeyHidden,\r\n  authDomain: \"smv-daq.firebaseapp.com\",\r\n  databaseURL: \"https://smv-daq.firebaseio.com\",\r\n  projectId: \"smv-daq\",\r\n  storageBucket: \"bucket.appspot.com\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport firebase from '../../firebase.js'\r\n\r\nvar startTimeMilli = \"\";\r\nvar convertedStart = \"\";\r\nvar stopTimeMilli = \"\";\r\nvar convertedStop = \"\";\r\nvar lapTimeMilli = [];\r\nvar lapTime = [];\r\nvar convertedLapTimes = [];\r\nvar lapNumber;\r\nlet database = firebase.database(); \r\n\r\nNumber.prototype.pad = function(size) {\r\n    var s = String(this);\r\n    while (s.length < (size || 2)) {s = \"0\" + s;}\r\n    return s;\r\n}\r\n  \r\nfunction convertTime(milliseconds) {\r\n    var minute, seconds, milli;\r\n    seconds = Math.floor(milliseconds / 1000);\r\n    minute = Math.floor(seconds / 60);\r\n    seconds = seconds % 60;\r\n    minute = minute % 60;\r\n    milli = milliseconds % 1000\r\n    return ((minute).pad(2) + \":\" + (seconds).pad(2) + \".\" + (milli).pad(3))\r\n}\r\n\r\nclass Controls extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        // This binding is necessary to make `this` work in the callback\r\n        this.lap = this.lap.bind(this);\r\n        this.start = this.start.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n    }\r\n\r\n    lap() {\r\n        var running;\r\n        database.ref(\"Running\").on('value', (snapshot) => {\r\n            running = snapshot.val();\r\n        });\r\n        if (running === \"True\")\r\n        {\r\n            var latestTrial;\r\n            database.ref(\"Latest Trial\").on('value', (snapshot) => {\r\n                latestTrial = snapshot.val();\r\n            });\r\n            database.ref(\"Lap\").on('value', (snapshot) => {\r\n                lapNumber = snapshot.val();\r\n            });\r\n            var update1 = {};\r\n            update1[\"Lap\"] = lapNumber+1;\r\n            var currentTime = Date.now();\r\n            lapTimeMilli.push(currentTime);\r\n            var pushTime;\r\n            if (lapTimeMilli.length === 1) {\r\n                pushTime = currentTime - startTimeMilli;\r\n            }\r\n            else {\r\n                pushTime = currentTime - lapTimeMilli[lapTimeMilli.length-2];\r\n            }\r\n            lapTime.push(pushTime);\r\n            var update2 = {};\r\n            update2[\"Fastest\"] = lapTime.indexOf(Math.min(...lapTime))+1;\r\n            update2[\"Slowest\"] = lapTime.indexOf(Math.max(...lapTime))+1;\r\n            var convertedLapTime = convertTime(pushTime);\r\n            convertedLapTimes.push(convertedLapTime);\r\n            firebase.database().ref().update(update1);\r\n            var lapFirebase = (lapNumber-1);\r\n            update2[lapFirebase] = convertedLapTime;\r\n            firebase.database().ref(latestTrial + \"/lap times\").update(update2);\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    start() {\r\n        var running;\r\n        database.ref(\"Running\").on('value', (snapshot) => {\r\n            running = snapshot.val();\r\n        });\r\n        if (running === \"True\")\r\n        {\r\n            var postData = \"True\";\r\n            var updates = {};\r\n            updates[\"drivingLap\"] = postData;\r\n            updates[\"Lap\"] = 1;\r\n            firebase.database().ref().update(updates);\r\n            startTimeMilli = Date.now();\r\n            var startTime = new Date(startTimeMilli)\r\n            convertedStart = startTime.getHours() + \":\" + startTime.getMinutes() + \":\" + startTime.getSeconds()\r\n            stopTimeMilli = \"\";\r\n            convertedStop = \"\";\r\n            lapTimeMilli = [];\r\n            lapTime = [];\r\n            convertedLapTimes = [];\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        var running, driving;\r\n        database.ref(\"Running\").on('value', (snapshot) => {\r\n            running = snapshot.val();\r\n        });\r\n        database.ref(\"drivingLap\").on('value', (snapshot) => {\r\n            driving = snapshot.val();\r\n        });\r\n        if (running === \"True\" && driving === \"True\")\r\n        {\r\n            var postData = \"False\";\r\n            var updates = {};\r\n            updates[\"drivingLap\"] = postData;\r\n            firebase.database().ref().update(updates);\r\n            stopTimeMilli = Date.now();\r\n            convertedStop = convertTime(stopTimeMilli-startTimeMilli);\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"controls\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"columns\">\r\n                        <div className=\"column is-one-fifth\">\r\n                        <button onClick={this.start} className=\"button is-primary control-button\">Start</button>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <p className=\"title is-5\">Time: {convertedStart}</p>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"columns\">\r\n                        <div className=\"column is-one-fifth\">\r\n                        <button onClick={this.stop} className=\"button is-danger control-button\">Stop</button>\r\n                        </div>\r\n                        <div className=\"column\">\r\n                            <p className=\"title is-5\">Time: {convertedStop}</p>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"columns\">\r\n                        <div className=\"column is-one-fifth\">\r\n                        <button onClick={this.lap} className=\"button is-info control-button\">Lap</button>\r\n                        </div>\r\n                        <div className=\"column padding-left\">\r\n                            <ol className=\"numInside\">\r\n                                <p className=\"title is-5\">Time: {convertedLapTimes.map(item => {\r\n                                    return <li>{item}</li>\r\n                                    })}\r\n                                </p>\r\n                            </ol>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n          </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Controls;","import React from 'react';\r\n\r\nclass ToggleButton extends React.Component {\r\n    render() {\r\n        return (\r\n        <button className=\"toggleButton\" >\r\n            <img src={(process.env.PUBLIC_URL + \"/images/icon.png\")} alt=\"toggle\" onClick={this.props.onClick}/>\r\n        </button>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ToggleButton;\r\n","import React from 'react';\r\n\r\nclass Header extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      date: \"\",\r\n      time: \"\",\r\n      daysLeft: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.intervalID = setInterval(\r\n      () => this.tick(),\r\n    );\r\n    var today = new Date();\r\n    var date1 = today.toDateString();\r\n    var cmas= new Date(2020, 3, 1);\r\n    var one_day=1000*60*60*24;\r\n    var daysLeft1 = \"Days to Competition: \" + (Math.ceil( (cmas.getTime()-today.getTime() )/ one_day ));\r\n    \r\n    this.setState({\r\n      date: date1,\r\n      daysLeft: daysLeft1\r\n    });\r\n  }\r\n\r\n  tick() {\r\n    this.setState({\r\n      time: new Date().toLocaleTimeString()\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalID);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <nav className=\"navbar is-fixed-top is-dark color-dark\" role=\"navigation\" aria-label=\"main navigation\">\r\n        <div className=\"navbar-brand\">\r\n          <a className=\"navbar-item\" href=\"https://www.bruinracing.com/smv/\">\r\n            <h1>Bruin Racing | Super Mileage Vehicle</h1>\r\n          </a>\r\n        </div>\r\n      \r\n        <div className=\"navbar-end is-hidden-touch\">\r\n          <div className=\"navbar-item\">\r\n            Made by A. Nagarajan, Continued by K. Nguyen\r\n          </div>\r\n          <div className=\"navbar-item\">\r\n            {this.state.daysLeft}\r\n          </div>\r\n          <div className=\"navbar-item\">\r\n            {this.state.date}\r\n          </div>\r\n          <div className=\"navbar-item\">\r\n            {this.state.time}\r\n          </div>\r\n        </div>\r\n        </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Driver extends React.Component{\r\n     // render() {\r\n     //      return (\r\n     //      <div className=\"card driver\">\r\n     //           <div className=\"columns\">\r\n     //           <div className=\"card-content column\">\r\n     //                <div>\r\n     //                     <figure className=\"image is-96x96\">\r\n     //                          <img src={this.props.driver[\"image\"]} alt=\"\"/>\r\n     //                     </figure>\r\n\r\n     //                     <div className=\"media-content\">\r\n     //                     <p className=\"title is-4\">{this.props.driver[\"name\"]}</p>\r\n     //                     <p className=\"title is-6\">{this.props.driver[\"social\"]}</p>\r\n     //                     </div>\r\n\r\n     //                     <div className=\"content\">\r\n     //                          <p className=\"title is-6\">{this.props.driver[\"message\"]}</p>\r\n     //                     </div>\r\n     //                </div>\r\n     //           </div>\r\n\r\n     //           <div className=\"column\">\r\n     //                <img className=\"car-image is-pulled-right\" src=\"./images/car.png\" alt=\"\"/>  \r\n     //           </div>\r\n     //           </div>\r\n     //      </div>\r\n     //    );\r\n     // }\r\n     render() {\r\n          return (\r\n          <div className=\"card driver\">\r\n               <div className=\"columns\">\r\n               <div className=\"card-content column\">\r\n                    <div>\r\n                         <figure className=\"image is-96x96\">\r\n                              <img src={process.env.PUBLIC_URL + \"/images/Caroline.jpg\"} alt=\"\"/>\r\n                         </figure>\r\n\r\n                         <div className=\"media-content\">\r\n                         <p className=\"title is-4\">Caroline</p>\r\n                         <p className=\"title is-6\">@CarolineDriver</p>\r\n                         </div>\r\n\r\n                         <div className=\"content\">\r\n                              <p className=\"title is-6\">I Believe In You!!!</p>\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n\r\n               <div className=\"column\">\r\n                    <img className=\"car-image is-pulled-right\" src={process.env.PUBLIC_URL + \"/images/car.png\"} alt=\"Not found\"/>  \r\n               </div>\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\n     \r\nexport default Driver;","import React from 'react';\r\n\r\nclass Accelerometer extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"joulemeter\">\r\n               <div className=\"card-content\">\r\n                    <p className=\"title is-5\">Accelerometer</p>\r\n                    <p className=\"subtitle is-6\">Acceleration X: {this.props.accelerometer[\"acceleration x\"]} m/s²</p>\r\n                    <p className=\"subtitle is-6\">Acceleration Y: {this.props.accelerometer[\"acceleration y\"]} m/s²</p>\r\n                    <p className=\"subtitle is-6\">Acceleration Z: {this.props.accelerometer[\"acceleration z\"]} m/s²</p>\r\n                    \r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\n     \r\nexport default Accelerometer;","import React from 'react';\r\n\r\nclass Environment extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"battery\">\r\n               <div className=\"card-content\">\r\n                    <p className=\"title is-5\">Environment</p>\r\n                    <p className=\"subtitle is-6\">Altitude: {this.props.environment.altitude} m</p>\r\n                    <p className=\"subtitle is-6\">Temperature: {this.props.environment.temperature} °C</p>\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\n     \r\nexport default Environment;","import React from 'react';\r\n\r\nclass HallEffect extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"speed\">\r\n               <div className=\"card-content\">\r\n                    <p className=\"title is-4\">Speed: {this.props.halleffect.speed} m/s</p>\r\n                    <p className=\"title speed-title is-6 is-spaced\">RPM: {this.props.halleffect.rpm} rpm</p>\r\n                    <p className=\"subtitle speed-title is-6 is-spaced\">Throttle: {this.props.halleffect.throttle}%</p>\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\nexport default HallEffect;","import React from 'react';\r\n\r\nclass Magnetometer extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"battery\">\r\n               <div className=\"card-content\">\r\n                    <p className=\"title is-5\">Magnetometer</p>\r\n                    <p className=\"subtitle is-6\">Magnetism X: {this.props.magnetometer.MagX} m/s²</p>\r\n                    <p className=\"subtitle is-6\">Magnetism Y: {this.props.magnetometer.MagY} m/s²</p>\r\n                    <p className=\"subtitle is-6\">Magnetism Z: {this.props.magnetometer.MagZ} m/s²</p>\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\n     \r\nexport default Magnetometer;","import React from 'react';\r\n\r\nclass Imu extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"joulemeter\">\r\n                <div className=\"card-content\">\r\n                    <p className=\"title is-5\">Gyroscope</p>\r\n                    <p className=\"subtitle is-6\">Heading: {this.props.imu.heading}°</p>\r\n                    <p className=\"subtitle is-6\">Gyroscopic X: {this.props.imu.GyX} m/s²</p>\r\n                    <p className=\"subtitle is-6\">Gyroscopic Y: {this.props.imu.GyY} m/s²</p>\r\n                    <p className=\"subtitle is-6\">Gyroscopic Z: {this.props.imu.GyZ} m/s²</p>\r\n                    <p className=\"subtitle is-6\">Pitch: {this.props.imu.pitch}°</p>\r\n                    <p className=\"subtitle is-6\">Roll: {this.props.imu.roll}°</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Imu;","import React from 'react';\r\n\r\nclass Joulemeter extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"joulemeter\">\r\n               <div className=\"card-content\">\r\n                    <p className=\"title is-4\">Joulemeter</p>\r\n                    <p className=\"title is-6\">{this.props.joulemeter.voltage} V | {this.props.joulemeter.current} A</p>\r\n                    <p className=\"title is-6 is-spaced\">Power: {this.props.joulemeter.power} W</p>\r\n                    {/* <p className=\"title is-6\">{this.props.joulemeter.volt} V | {this.props.joulemeter.current} A</p>\r\n                    <p className=\"title is-6 is-spaced\">Instant Power: {this.props.joulemeter.instant} W</p>\r\n                    <p className=\"subtitle is-6\">Avg Efficiency: {this.props.joulemeter.avg} mi/kWh</p>\r\n                    <p className=\"subtitle is-6\">Peak Efficiency: {this.props.joulemeter.peak} mi/kWh</p>\r\n                    <p className=\"subtitle is-6\">Altitude: {this.props.joulemeter.Altitude} </p>\r\n                    <p className=\"subtitle is-6\">GyX: {this.props.joulemeter.GyX}°</p>\r\n                    <p className=\"subtitle is-6\">GyY: {this.props.joulemeter.GyY}°</p>\r\n                    <p className=\"subtitle is-6\">GyZ: {this.props.joulemeter.GyZ}°</p> */}\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\n     \r\nexport default Joulemeter;","import React from 'react';\r\n\r\nimport Accelerometer from './accelerometer';\r\nimport Environment from './environment';\r\nimport HallEffect from './hall-effect'\r\nimport Magnetometer from './magnetometer';\r\n//import Motor from './motor';\r\n//import Battery from './battery';\r\nimport Imu from './imu';\r\nimport Joulemeter from './joulemeter';\r\n//import Speed from './speed';\r\n\r\nclass Car extends React.Component{\r\n    render() {\r\n        return (\r\n          <div className=\"card car\">\r\n               <div className=\"columns\">\r\n                    <div className=\"column\">\r\n                         <Joulemeter joulemeter={this.props.joulemeter} />\r\n                         <Accelerometer accelerometer={this.props.accelerometer} />\r\n                         <Environment environment={this.props.environment} />\r\n                         \r\n                    </div>\r\n                    <div className=\"column\">\r\n                         <HallEffect halleffect={this.props.halleffect} />\r\n                         <Magnetometer magnetometer={this.props.magnetometer}/>\r\n                         <Imu imu={this.props.imu}/>\r\n                    </div>\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\n     \r\nexport default Car;","import React from 'react';\r\nimport firebase from '../../firebase.js';\r\n\r\nclass Lap extends React.Component{\r\n     constructor(props) {\r\n     super(props)\r\n     this.startTimer = this.startTimer.bind(this)\r\n     this.stopTimer = this.stopTimer.bind(this)\r\n     this.resetTimer = this.resetTimer.bind(this)\r\n     this.resetTimer2 = this.resetTimer2.bind(this)\r\n     }\r\n        \r\n     state = {\r\n          timerOn: false,\r\n          timerStart: 0,\r\n          timerStart2: 0,\r\n          timerTime: 0,\r\n          timerTimeReset: 0,\r\n          isRunning: \"False\",\r\n          lapNumber: 1\r\n     };\r\n     \r\n     startTimer = () => {\r\n          this.setState({\r\n               timerOn: true,\r\n               timerTime: this.state.timerTime,\r\n               timerTimeReset: this.state.timerTimeReset,\r\n               timerStart: Date.now() - this.state.timerTime,\r\n               timerStart2: Date.now() - this.state.timerTimeReset\r\n          });\r\n          this.timer = setInterval(() => {\r\n               this.setState({\r\n               timerTime: Date.now() - this.state.timerStart,\r\n               timerTimeReset: Date.now() - this.state.timerStart2\r\n               });\r\n          }, 10);\r\n\r\n     };\r\n     \r\n     stopTimer = () => {\r\n          this.setState({ \r\n               timerOn: false \r\n          });\r\n          clearInterval(this.timer);\r\n     };\r\n     \r\n     resetTimer = () => {\r\n          this.setState({\r\n               timerStart: Date.now(),\r\n               timerTime: 0,\r\n          });\r\n     };\r\n     \r\n     resetTimer2 = () => {\r\n          this.setState({\r\n               timerStart2: Date.now(),\r\n               timerTimeReset: 0,\r\n          });\r\n     };\r\n\r\n     componentDidMount = () => {\r\n          if (this.props.lap[\"drivingLap\"] === \"True\") {\r\n               if (this.props.lap[\"drivingLap\"] === \"True\") {\r\n                    this.resetTimer();\r\n                    this.startTimer();\r\n                    this.setState({\r\n                         isRunning: \"True\",\r\n                    })\r\n                }\r\n               else if (this.props.lap[\"drivingLap\"] === \"False\") {\r\n                    this.stopTimer();\r\n                    this.setState({\r\n                         isRunning: \"False\"\r\n                    })\r\n               }    \r\n          }\r\n     };\r\n      \r\n     componentDidUpdate = () => {\r\n          const {isRunning, lapNumber} = this.state;\r\n          if (isRunning !== this.props.lap[\"drivingLap\"]) {\r\n               if (this.props.lap[\"drivingLap\"] === \"True\") {\r\n                    this.startTimer();\r\n                    this.resetTimer();\r\n                    this.setState({\r\n                         isRunning: \"True\"\r\n                    })\r\n               }\r\n               else if (this.props.lap[\"drivingLap\"] === \"False\") {\r\n                    this.stopTimer();\r\n                    this.setState({\r\n                         isRunning: \"False\"\r\n                    })\r\n               }\r\n          }\r\n          if (lapNumber !== this.props.lap[\"Lap\"]) {\r\n               this.resetTimer2();\r\n               this.setState({\r\n                    lapNumber: this.props.lap[\"Lap\"]\r\n               })\r\n          }\r\n     }\r\n\r\n     render() {\r\n          let latestTrial;\r\n          let peakTimes = {};\r\n          let database = firebase.database();\r\n          let exists;\r\n          database.ref(\"Latest Trial\").on('value', (snapshot) => {\r\n              latestTrial = snapshot.val();\r\n          });\r\n          database.ref(latestTrial).on('value', (snapshot) => {\r\n               exists = snapshot.child(\"lap times\").exists();\r\n          })\r\n          database.ref(latestTrial + \"/lap times\").on('value', (snapshot) => {\r\n               peakTimes = snapshot.val();\r\n          });\r\n          let slowestTime = \"\";\r\n          let fastestTime = \"\";\r\n          let slowestLap = \"0\";\r\n          let fastestLap = \"0\";\r\n          if (exists === true) {\r\n               slowestLap = peakTimes[\"Slowest\"];\r\n               fastestLap = peakTimes[\"Fastest\"];\r\n               slowestTime = peakTimes[slowestLap];\r\n               fastestTime = peakTimes[fastestLap];\r\n          }\r\n          const { timerTime, timerTimeReset } = this.state;\r\n          let centiseconds = (\"0\" + (Math.floor(timerTimeReset / 10) % 100)).slice(-2);\r\n          let seconds = (\"0\" + (Math.floor(timerTimeReset / 1000) % 60)).slice(-2);\r\n          let minutes = (\"0\" + (Math.floor(timerTimeReset / 60000) % 60)).slice(-2);\r\n          const fourptthree = 1800000 - timerTime;\r\n          let fourptthreecentiseconds = (\"0\" + (Math.floor(fourptthree / 10) % 100)).slice(-2);\r\n          let fourptthreeseconds = (\"0\" + (Math.floor(fourptthree / 1000) % 60)).slice(-2);\r\n          let fourptthreeminutes = (\"0\" + (Math.floor(fourptthree / 60000) % 60)).slice(-2);\r\n          return (\r\n          <div>\r\n               <div className=\"columns\">\r\n                    <div className=\"column\">\r\n                         <div className=\"card-content\">\r\n                              <p className=\"title is-6\">Lap: {this.props.lap.Lap}</p>\r\n                              <p className=\"subtitle is-6\">Lap Time: {minutes}:{seconds}.{centiseconds} </p>\r\n                              <p className=\"subtitle is-6\">Time Remaining: {fourptthreeminutes}:{fourptthreeseconds}.{fourptthreecentiseconds} </p>\r\n                         </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                         <div className=\"card-content\">\r\n                              <p className=\"subtitle is-6\">\r\n                                   Slowest Lap: {slowestLap} {slowestTime}\r\n                              </p>\r\n                              <p className=\"subtitle is-6\">\r\n                                   Fastest Lap: {fastestLap} {fastestTime}\r\n                              </p>\r\n                         </div>\r\n                    </div>\r\n               </div>\r\n\r\n          </div>\r\n          );\r\n     }\r\n};\r\n\r\n     \r\nexport default Lap;","import React from 'react';\r\n\r\nclass Weather extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"GPS\">\r\n               <div className=\"card-content GPS\">\r\n                    <p className=\"title is-6\">Latitude: {this.props.gps.latitude}</p>\r\n                    <p className=\"title is-6\">Longitude: {this.props.gps.longitude}</p>\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\nexport default Weather;","import React from 'react';\r\n\r\n//import Weather from './weather';\r\nimport Lap from './lap';\r\nimport GPS from './gps';\r\nimport Controls from './controls';\r\n\r\nclass Track extends React.Component{\r\n     render() {\r\n        return (\r\n          <div className=\"card track\">\r\n               <div className=\"columns\">\r\n                    <div className=\"column\">\r\n                         <div className=\"card-content\">\r\n                              <p className=\"title is-4\">Parking Garage</p>\r\n                              <p className=\"title is-6\">{this.props.track[\"Latest Trial\"]} </p>\r\n                         </div>\r\n                         <GPS gps={this.props.gps}/>\r\n                    </div>\r\n               </div>\r\n               <Lap lap={this.props.lap}/>\r\n               <div className=\"card-image\">\r\n                    <Controls/>\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\n     \r\nexport default Track;","import React from 'react';\r\n\r\nimport Header from './groundDash/header';\r\nimport Driver from './groundDash/driver';\r\nimport Car from './groundDash/car';\r\nimport Track from './groundDash/track';\r\n\r\nclass GroundDash extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"groundDash canvas color-dark\" style={{paddingTop: '45px'}}>\r\n              <Header/>\r\n              <div className=\"columns\">\r\n                <div className=\"column\">  \r\n                  <Driver/>\r\n                  <Car \r\n                  joulemeter={this.props.joulemeter} \r\n                  environment={this.props.environment} \r\n                  magnetometer={this.props.magnetometer} \r\n                  imu={this.props.imu} \r\n                  accelerometer={this.props.accelerometer} \r\n                  halleffect={this.props.halleffect} />\r\n                 </div>\r\n                <div className=\"column\">\r\n                  <Track \r\n                  gps={this.props.gps} \r\n                  lap={this.props.lap} \r\n                  track={this.props.track} /> \r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n     }\r\n};\r\n\r\n     \r\nexport default GroundDash;","import React from 'react';\r\n\r\nclass LapDriver extends React.Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.stopTimer = this.stopTimer.bind(this)\r\n    this.resetTimer = this.resetTimer.bind(this)\r\n  }\r\n  \r\n  state = {\r\n    timerOn: false,\r\n    timerStart: 0,\r\n    timerTime: 0,\r\n    isRunning: \"False\",\r\n    lapNumber: 1\r\n  };\r\n\r\n  startTimer = () => {\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: Date.now() - this.state.timerTime,\r\n      isRunning: \"True\"\r\n    });\r\n    this.timer = setInterval(() => {\r\n      this.setState({\r\n        timerTime: Date.now() - this.state.timerStart\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n  stopTimer = () => {\r\n    this.setState({ \r\n      timerOn: false,\r\n      isRunning: \"False\"\r\n     });\r\n    clearInterval(this.timer);\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.setState({\r\n      timerStart: Date.now(),\r\n      timerTime: 0,\r\n    });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.lap[\"drivingLap\"] === \"True\") {\r\n      if (this.props.lap[\"drivingLap\"] === \"True\") {\r\n        this.resetTimer();\r\n        this.startTimer();\r\n      }\r\n      else if (this.props.lap[\"drivingLap\"] === \"False\") {\r\n        this.stopTimer();\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    const {isRunning, lapNumber } = this.state;\r\n    if (isRunning !== this.props.lap[\"drivingLap\"]) {\r\n      if (this.props.lap[\"drivingLap\"] === \"True\") {\r\n        this.startTimer();\r\n        this.resetTimer();\r\n        this.setState({\r\n          isRunning: \"True\"\r\n        })\r\n      }\r\n      else if (this.props.lap[\"drivingLap\"] === \"False\") {\r\n        this.stopTimer();\r\n        this.setState({\r\n          isRunning: \"False\"\r\n        })\r\n      }\r\n    }\r\n    if (lapNumber !== this.props.lap[\"Lap\"]) {\r\n      this.resetTimer();\r\n      this.setState({\r\n        lapNumber: this.props.lap[\"Lap\"]\r\n      })\r\n    }\r\n  }\r\n\r\n  render = () => {\r\n    const { timerTime } = this.state;\r\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\r\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n    const fourptthree = 260000 - timerTime;\r\n    let fourptthreecentiseconds = (\"0\" + (Math.floor(fourptthree / 10) % 100)).slice(-2);\r\n    let fourptthreeseconds = (\"0\" + (Math.floor(fourptthree / 1000) % 60)).slice(-2);\r\n    let fourptthreeminutes = (\"0\" + (Math.floor(fourptthree / 60000) % 60)).slice(-2);\r\n    return (\r\n      <div>\r\n        <div className=\"lap\">\r\n            <div className=\"card-content columns\">\r\n                <div className=\"column\">\r\n                  <p>Lap {this.props.lap[\"Lap\"]}</p>\r\n                  <p>Remaining</p>\r\n                </div>\r\n                <div className=\"column\">\r\n                  <p>{minutes} : {seconds} : {centiseconds}</p>\r\n                  <p>{fourptthreeminutes} : {fourptthreeseconds} : {fourptthreecentiseconds}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\n     \r\nexport default LapDriver;","import React from 'react';\r\n\r\nclass SpeedDriver extends React.Component{\r\n    render() {\r\n        return (\r\n          <div className=\"columns\">\r\n               <div className=\"column\">\r\n                    <p className = \"speed has-text-centered big\">{this.props.speed.speed}</p>\r\n                    <p className = \"speed has-text-centered km\">m/s</p>\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\nexport default SpeedDriver;","import React from 'react';\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\n\r\nclass SpeedometerDriver extends React.Component{\r\n    render() {\r\n        return (\r\n          <div className=\"columns\">\r\n               <div className=\"column has-text-centered\">\r\n                <ReactSpeedometer\r\n                    minValue={0}\r\n                    maxValue={70}\r\n                    needleHeightRatio={0.8}\r\n                    maxSegmentLabels={8}\r\n                    segments={5555}\r\n                    value={this.props.speedometer.speed}\r\n                    textColor={\"white\"}\r\n                    width={1000}\r\n                    height={450}\r\n                    needleTransition={\"easePolyIn\"}\r\n                    ringWidth={120}\r\n                    paddingVertical={150}\r\n                    valueTextFontSize={'0'}\r\n                    labelFontSize={'50'}\r\n                    paddingHorizontal={100}\r\n                />\r\n               </div>\r\n          </div>\r\n        );\r\n     }\r\n};\r\n\r\nexport default SpeedometerDriver;","import React from 'react';\r\n\r\nimport LapDriver from './driverDash/lapDriver';\r\nimport SpeedDriver from './driverDash/speedDriver';\r\nimport SpeedometerDriver from './driverDash/speedometerDriver';\r\n\r\nclass Driver extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"canvas color-dark driverDash\" style={{paddingTop: '45px'}}>\r\n              <div className=\"columns is-vcentered\">\r\n                <div className=\"column is-one-third\">   \r\n                  <SpeedDriver \r\n                  speed={this.props.speed} />\r\n                </div>\r\n                <div className=\"column\">\r\n                  <SpeedometerDriver \r\n                  speedometer={this.props.speed}/>\r\n                  <LapDriver \r\n                  lap={this.props.lap} />  \r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n     }\r\n};\r\n\r\n     \r\nexport default Driver;","import React from 'react';\r\nimport GroundDash from './groundDash'\r\nimport DriverDash from './driverDash'\r\n\r\nclass WhichOne extends React.Component {\r\n    render() {\r\n        let {which,\r\n            joulemeter,\r\n            environment,\r\n            magnetometer,\r\n            imu, \r\n            accelerometer, \r\n            halleffect, \r\n            gps, \r\n            all}  = this.props.whichOne;\r\n        const Which = () => {\r\n            if (which === \"ground\") {\r\n                return <GroundDash \r\n                joulemeter={joulemeter} \r\n                environment={environment} \r\n                magnetometer={magnetometer} \r\n                imu={imu} \r\n                accelerometer={accelerometer} \r\n                halleffect={halleffect} \r\n                gps={gps} \r\n                lap={all} \r\n                track={all} />\r\n            }\r\n            else if (which === \"driver\" ) {\r\n                return <DriverDash \r\n                speed={halleffect} \r\n                speedometer={halleffect} \r\n                lap={all} />\r\n            }\r\n        }\r\n        return (\r\n            <div>{Which()}</div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default WhichOne;\r\n\r\n","import React from 'react';\r\nimport firebase from './firebase.js'\r\nimport './App.css';\r\n\r\n// HERE IS THE WEBSITE IM USING FOR THE GRAPH EXAMPLES SUPER HELPFUL\r\n// https://github.com/jerairrest/react-chartjs-2/blob/master/example/src/components/line.js\r\n// http://jerairrest.github.io/react-chartjs-2/\r\n\r\nimport ToggleButton from './components/toggleButton';\r\nimport WhichOne from './components/whichOne'\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      all: {},\r\n      latestTime: '',\r\n      latestTrial: '',\r\n      latestData: {},\r\n      accelerometer: {},\r\n      battery: {},\r\n      environment: {},     \r\n      gps: {},\r\n      halleffect: {},\r\n      imu: {},\r\n      joulemeter: {},\r\n      lap: {},\r\n      lapTimes: {},\r\n      magnetometer: {},\r\n      motor: {},\r\n      speed: {},\r\n      track: {},\r\n      latestTimeUpdate: new Date(),\r\n      which: \"driver\",\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    let database = firebase.database();\r\n    database.ref().on('value', (snapshot) => {\r\n      var all = snapshot.val();\r\n      this.setState({\r\n        all: all\r\n      })\r\n    });\r\n    database.ref(\"Latest Time\").on('value', (snapshot) => {\r\n      database.ref(\"Running\").on('value', (snapshot) => {\r\n        var running = snapshot.val();\r\n        if (running === \"True\") {\r\n          var dateUpdate = new Date();\r\n          this.setState({\r\n            latestTimeUpdate: dateUpdate\r\n          })\r\n        }\r\n        setInterval(() => {\r\n          var current = new Date();\r\n          var difference = Math.abs(this.state.latestTimeUpdate - current);\r\n          //console.log(difference);\r\n          if (difference > 5000) {\r\n            //console.log(\"update\");\r\n            var update = {};\r\n            update[\"Running\"] = \"False\";\r\n            database.ref().update(update);\r\n          }\r\n        }, 5000);\r\n      });\r\n    }); \r\n    \r\n    //sets the time\r\n    database.ref(\"Latest Time\").on('value', (snapshot) => {\r\n      var latestTime1 = snapshot.val();\r\n      //sets the trial\r\n      database.ref(\"Latest Trial\").on('value', (snapshot) => {\r\n        var latestTrial1 = snapshot.val();\r\n        //sets the data\r\n        database.ref(latestTrial1).child(latestTime1).on('value', (snapshot) => {\r\n          var latestData1 = {};\r\n          let exists = snapshot.exists();\r\n          let accelerometer;\r\n          let battery;\r\n          let environment;\r\n          let gps;\r\n          let halleffect;\r\n          let imu;\r\n          let joulemeter;\r\n          let lap;\r\n          let lapTimes;\r\n          let magnetometer;\r\n          let motor;\r\n          let speed;\r\n          if (exists === true) {\r\n            latestData1 = snapshot.val();\r\n            accelerometer = latestData1[\"accelerometer\"];\r\n            battery = latestData1[\"battery\"];\r\n            environment = latestData1[\"environment\"];\r\n            gps = latestData1[\"gps\"];\r\n            halleffect = latestData1[\"hall-effect\"];\r\n            imu = latestData1[\"gyroscope\"];\r\n            joulemeter = latestData1[\"joulemeter\"];\r\n            lap = latestData1[\"lap\"];\r\n            lapTimes = latestData1[\"lap times\"];\r\n            magnetometer = latestData1[\"magnetometer\"];\r\n            motor = latestData1[\"motor\"];\r\n            speed = latestData1[\"speed\"];\r\n          }\r\n          else {\r\n            accelerometer = 0;\r\n            battery = 0;\r\n            environment = 0;\r\n            gps = 0;\r\n            halleffect = 0;\r\n            imu = 0;\r\n            joulemeter = 0;\r\n            lap = 0;\r\n            lapTimes = 0;\r\n            magnetometer = 0;\r\n            motor = 0;\r\n            speed = 0;\r\n          }\r\n          \r\n          this.setState({\r\n            latestData: latestData1,\r\n            accelerometer: accelerometer,\r\n            battery: battery,\r\n            environment: environment,\r\n            gps: gps,\r\n            halleffect: halleffect,\r\n            imu: imu,\r\n            joulemeter: joulemeter,\r\n            lap: lap,\r\n            lapTimes: lapTimes,\r\n            magnetometer: magnetometer,\r\n            motor: motor,\r\n            speed: speed,\r\n          })\r\n        });\r\n  \r\n        this.setState({\r\n          latestTrial: latestTrial1\r\n        })\r\n      });\r\n\r\n      this.setState({\r\n        latestTime: latestTime1\r\n      })\r\n    });\r\n  }\r\n\r\n  setDriver() {\r\n    this.setState({which: \"driver\"})\r\n  }\r\n\r\n  setGround() {\r\n    this.setState({which: \"ground\"})\r\n  }\r\n\r\n  render() {\r\n    const whichOneIsIt = this.state.which;\r\n    let button;\r\n    if (whichOneIsIt === \"ground\") {\r\n      button = <ToggleButton onClick={()=> this.setDriver()} />;\r\n    } else if (whichOneIsIt === \"driver\"){\r\n      button = <ToggleButton onClick={()=> this.setGround()} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <WhichOne whichOne={this.state} />\r\n        {button}\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}